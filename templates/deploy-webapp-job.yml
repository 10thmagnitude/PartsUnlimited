parameters:
  environment: ''
  webAppRG: ''
  webApp: ''
  azureSub: ''
  vstsEndpoint: ''
  dependsOn: 'runTerraform'
  runQuickPerfTests: 'no'

jobs:
- deployment: deployWebApp
  dependsOn: ${{ parameters.dependsOn }}
  displayName: Deploy Web App
  pool:
    vmImage: 'windows-latest'
  variables:
    artifactName: drop
    package: '$(Pipeline.Workspace)/$(artifactName)/PartsUnlimitedWebsite.zip'
  environment:
    ${{ parameters.environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: '$(artifactName)'

        - task: AzureRmWebAppDeployment@4
          displayName: 'Azure App Service Deploy: ${{ parameters.webApp }}'
          inputs:
            azureSubscription: '${{ parameters.azureSub }}'
            WebAppName: '${{ parameters.webApp }}'
            packageForLinux: '$(Package)'
        
        - task: AzurePowerShell@4
          displayName: 'Set sticky for SlotName appsetting'
          inputs:
            azureSubscription: '${{ parameters.azureSub }}'
            ScriptType: InlineScript
            Inline: |
              New-AzResource -ResourceGroupName ${{ parameters.webAppRG }} -ResourceType Microsoft.Web/sites/Config -Name ${{ parameters.webApp }}/slotConfigNames -PropertyObject @{ appSettingNames = @("SlotName") } -ApiVersion 2015-08-01 -Force
            azurePowerShellVersion: LatestVersion
        
        - task: SqlDacpacDeploymentOnMachineGroup@0
          displayName: 'Clean SQL for load testing'
          inputs:
            TaskType: 'sqlInline'
            InlineSql: |
              DECLARE @itemCount INT;
              SELECT @itemCount = COUNT(CartItemId) FROM CartItems
              IF 1000 < @itemCount
                BEGIN
                  DELETE FROM CartItems;
                END
            ServerName: 'cdpusql$(System.StageName).database.windows.net'
            DatabaseName: 'PartsUnlimited'
            AuthScheme: 'sqlServerAuthentication'
            SqlUsername: 'tfadmin'
            SqlPassword: '$(SQLPassword)'
        
        - script: 'echo "RunQuickPerfTests = [${{ parameters.runQuickPerfTests }}]"'

        - ${{ if eq(parameters.runQuickPerfTests, 'yes') }}:
          - task: QuickPerfTest@1
            displayName: 'Quick Web Performance Test PartsUnlimited-$(System.StageName)'
            inputs:
              connectedServiceName: '${{ parameters.vstsEndpoint }}'
              websiteUrl: 'https://${{ parameters.webApp }}.azurewebsites.net'
              testName: 'PartsUnlimited-$(System.StageName)'
              avgResponseTimeThreshold: 300
            condition: succeeded()
            continueOnError: true